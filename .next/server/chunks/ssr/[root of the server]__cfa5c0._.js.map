{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 65, "column": 0}, "map": {"version":3,"sources":["file:///media/dark/Baby_Shark/Anufied/WebstormProjects/Optidrive/optidrive/src/components/ui/button.js"],"sourcesContent":["// src/components/ui/button.js\nimport React from 'react';\n\nexport const Button = ({ children, className, ...props }) => {\n    return (\n        <button className={`btn ${className}`} {...props}>\n            {children}\n        </button>\n    );\n};"],"names":[],"mappings":"AAAA,8BAA8B;;;;;AAC9B;;;AAEO,MAAM,SAAS,CAAC,EAAE,QAAQ,EAAE,SAAS,EAAE,GAAG,OAAO;IACpD,qBACI,qKAAC;QAAO,WAAW,CAAC,IAAI,EAAE,WAAW;QAAG,GAAG,KAAK;kBAC3C;;;;;;AAGb"}},
    {"offset": {"line": 84, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 90, "column": 0}, "map": {"version":3,"sources":["file:///media/dark/Baby_Shark/Anufied/WebstormProjects/Optidrive/optidrive/src/components/ui/input.js"],"sourcesContent":["// src/components/ui/input.js\nimport React from 'react';\n\nexport const Input = ({ className, ...props }) => {\n    return (\n        <input className={`input ${className}`} {...props} />\n    );\n};"],"names":[],"mappings":"AAAA,6BAA6B;;;;;AAC7B;;;AAEO,MAAM,QAAQ,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO;IACzC,qBACI,qKAAC;QAAM,WAAW,CAAC,MAAM,EAAE,WAAW;QAAG,GAAG,KAAK;;;;;;AAEzD"}},
    {"offset": {"line": 108, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 114, "column": 0}, "map": {"version":3,"sources":["file:///media/dark/Baby_Shark/Anufied/WebstormProjects/Optidrive/optidrive/src/components/ui/Modal.js"],"sourcesContent":["// optidrive/src/components/ui/Modal.js\nimport React from 'react';\nimport './Modal.css';\n\nconst Modal = ({ message, onClose }) => {\n  return (\n    <div className=\"modal-overlay\">\n      <div className=\"modal-content\">\n        <p>{message}</p>\n        <button className=\"modal-close-button\" onClick={onClose}>Close</button>\n      </div>\n    </div>\n  );\n};\n\nexport default Modal;"],"names":[],"mappings":"AAAA,uCAAuC;;;;;AACvC;;;;AAGA,MAAM,QAAQ,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE;IACjC,qBACE,qKAAC;QAAI,WAAU;kBACb,cAAA,qKAAC;YAAI,WAAU;;8BACb,qKAAC;8BAAG;;;;;;8BACJ,qKAAC;oBAAO,WAAU;oBAAqB,SAAS;8BAAS;;;;;;;;;;;;;;;;;AAIjE;uCAEe"}},
    {"offset": {"line": 158, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 164, "column": 0}, "map": {"version":3,"sources":["file:///media/dark/Baby_Shark/Anufied/WebstormProjects/Optidrive/optidrive/src/pages/FileExplorer.js"],"sourcesContent":["// src/pages/FileExplorer.js\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport Modal from '@/components/ui/Modal';\nimport { Folder, File } from 'lucide-react'; // Import icons\nimport './FileExplorer.css';\n\nexport default function FileExplorer() {\n  const [files, setFiles] = useState([]);\n  const [modalMessage, setModalMessage] = useState('');\n  const [currentPath, setCurrentPath] = useState('');\n\n  useEffect(() => {\n    fetchFiles();\n  }, [currentPath]);\n\n  const fetchFiles = async () => {\n    try {\n      const response = await axios.get(`http://localhost:5676/list?path=${currentPath}`);\n      setFiles(response.data);\n    } catch (error) {\n      console.error('Error fetching files:', error);\n      setModalMessage('Error fetching files');\n    }\n  };\n\n  const handleUpload = async (event) => {\n    const files = event.target.files;\n    const formData = new FormData();\n    for (let file of files) {\n      formData.append('file', file);\n    }\n    try {\n      await axios.post(`http://localhost:5676/upload?path=${currentPath}`, formData);\n      setModalMessage('Files uploaded successfully');\n      fetchFiles();\n    } catch (error) {\n      console.error('Error uploading files:', error);\n      setModalMessage('Error uploading files');\n    }\n  };\n\n  const handleCreateFolder = async () => {\n    const folderName = prompt('Enter folder name:');\n    if (folderName) {\n      try {\n        const response = await axios.post(`http://localhost:5676/mkdir?path=${currentPath}`, { name: folderName });\n        setModalMessage(response.data.message);\n        fetchFiles();\n      } catch (error) {\n        if (error.response && error.response.status === 400) {\n          setModalMessage(`Folder with name \"${folderName}\" already exists.`);\n        } else {\n          console.error('Error creating folder:', error);\n          setModalMessage('Error creating folder');\n        }\n      }\n    }\n  };\n\n  const handleDelete = async (name) => {\n    try {\n      await axios.delete(`http://localhost:5676/delete?path=${currentPath}&name=${name}`);\n      setModalMessage('File deleted successfully');\n      fetchFiles();\n    } catch (error) {\n      console.error('Error deleting file:', error);\n      setModalMessage('Error deleting file');\n    }\n  };\n\n  const handleRename = async (oldName) => {\n    const newName = prompt('Enter new name:');\n    if (newName) {\n      try {\n        await axios.post(`http://localhost:5676/rename?path=${currentPath}`, { oldName, newName });\n        setModalMessage('File renamed successfully');\n        fetchFiles();\n      } catch (error) {\n        console.error('Error renaming file:', error);\n        setModalMessage('Error renaming file');\n      }\n    }\n  };\n\n  const handleDownload = async (name) => {\n    try {\n      const response = await axios.get(`http://localhost:5676/download?path=${currentPath}&name=${name}`, {\n        responseType: 'blob',\n      });\n      const url = window.URL.createObjectURL(new Blob([response.data]));\n      const link = document.createElement('a');\n      link.href = url;\n      link.setAttribute('download', name);\n      document.body.appendChild(link);\n      link.click();\n      document.body.removeChild(link);\n    } catch (error) {\n      console.error('Error downloading file:', error);\n      setModalMessage('Error downloading file');\n    }\n  };\n\n  const handleNavigate = async (name) => {\n    setCurrentPath(path.join(currentPath, name));\n  };\n\n  return (\n    <div className=\"file-explorer\">\n      <h1>File Explorer</h1>\n      <div className=\"action-grid\">\n        <Button className=\"action-button\" onClick={() => document.getElementById('file-input').click()}>\n          Upload\n        </Button>\n        <Button className=\"action-button\" onClick={handleCreateFolder}>\n          Create Folder\n        </Button>\n      </div>\n      <Input type=\"file\" id=\"file-input\" style={{ display: 'none' }} onChange={handleUpload} multiple />\n      <div className=\"file-grid\">\n        {files.map((file, index) => (\n          <div key={index} className=\"file-card\">\n            <div className=\"file-icon\">\n              {file.includes('.') ? <File /> : <Folder />}\n            </div>\n            <div className=\"file-name\">{file}</div>\n            <div className=\"file-menu\">\n              <Button className=\"file-menu-button\" onClick={() => handleDelete(file)}>\n                Delete\n              </Button>\n              <Button className=\"file-menu-button\" onClick={() => handleRename(file)}>\n                Rename\n              </Button>\n              {!file.includes('.') && (\n                <Button className=\"file-menu-button\" onClick={() => handleNavigate(file)}>\n                  Open\n                </Button>\n              )}\n              {file.includes('.') && (\n                <Button className=\"file-menu-button\" onClick={() => handleDownload(file)}>\n                  Download\n                </Button>\n              )}\n            </div>\n          </div>\n        ))}\n      </div>\n      {modalMessage && <Modal message={modalMessage} onClose={() => setModalMessage('')} />}\n    </div>\n  );\n}"],"names":[],"mappings":"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"}},
    {"offset": {"line": 438, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}