{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 97, "column": 0}, "map": {"version":3,"sources":["file:///media/dark/Baby_Shark/Anufied/WebstormProjects/Optidrive/optidrive/src/pages/FileExplorer.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useRouter } from 'next/router';\nimport axios from 'axios';\nimport './FileExplorer.css';\n\nconst FileExplorer = () => {\n  const router = useRouter();\n  const [files, setFiles] = useState([]);\n  const { folderNames } = router.query;\n  const currentPath = Array.isArray(folderNames) ? folderNames.join('/') : folderNames || '';\n\n  useEffect(() => {\n    const fetchFiles = async () => {\n      try {\n        const response = await axios.get(`http://localhost:4000/file-explorer?path=${currentPath}`);\n        setFiles([\n          ...response.data.folders.map(f => ({ name: f, isDirectory: true })),\n          ...response.data.files.map(f => ({ name: f.name, isDirectory: false, extension: f.extension, showMenu: false }))\n        ]);\n      } catch (error) {\n        console.error('Error fetching files:', error);\n      }\n    };\n\n    fetchFiles();\n  }, [currentPath]);\n\n  const handleFileClick = (file) => {\n    if (file.isDirectory) {\n      const newPath = currentPath ? `${currentPath}/${file.name}` : file.name;\n      router.push(`/file-explorer/${newPath}`);\n    } else {\n      const fileUrl = `http://localhost:4000/download?path=${file.name}`;\n      window.open(fileUrl, '_blank');\n    }\n  };\n\n  const handleDelete = async (file) => {\n    try {\n      await axios.delete(`http://localhost:4000/delete?path=${currentPath}/${file.name}`);\n      setFiles(files.filter(f => f.name !== file.name));\n    } catch (error) {\n      console.error('Error deleting file:', error);\n    }\n  };\n\n  const handleRename = async (file, newName) => {\n    try {\n      await axios.post(`http://localhost:4000/rename`, { path: `${currentPath}/${file.name}`, newName });\n      setFiles(files.map(f => f.name === file.name ? { ...f, name: newName } : f));\n    } catch (error) {\n      console.error('Error renaming file:', error);\n    }\n  };\n\n  const renderFileIcon = (file) => {\n    const imageExtensions = ['jpg', 'jpeg', 'png', 'gif', 'bmp'];\n    const docExtensions = ['txt', 'docx', 'pptx', 'pdf', 'odf', 'md', 'yaml', 'html'];\n\n    if (imageExtensions.includes(file.extension)) {\n      return <img src={`http://localhost:4000/preview?path=${file.name}`} title={file.name} className=\"thumbnail\" />;\n    } else if (docExtensions.includes(file.extension)) {\n      return <img src={`/icons/${file.extension}.png`} alt={file.extension} className=\"icon\" />;\n    } else {\n      return <img src=\"/icons/file.png\" alt=\"default\" className=\"icon\" />;\n    }\n  };\n\n  const handleDownload = (file) => {\n    const fileUrl = `http://localhost:4000/download?path=${file.name}`;\n    window.open(fileUrl, '_blank');\n  };\n\n  const handleMove = async (file, newPath) => {\n    try {\n      await axios.post(`http://localhost:4000/move`, { path: `${currentPath}/${file.name}`, newPath });\n      setFiles(files.filter(f => f.name !== file.name));\n    } catch (error) {\n      console.error('Error moving file:', error);\n    }\n  };\n\n  const toggleMenu = (file) => {\n    setFiles(files.map(f => f.name === file.name ? { ...f, showMenu: !f.showMenu } : { ...f, showMenu: false }));\n  };\n\n  return (\n    <div className=\"file-explorer\">\n      <h1>Optidrive Explorer</h1>\n      <div className=\"file-grid\">\n        {files.map((file) => (\n          <div key={file.name} className={`file-card ${file.isDirectory ? 'folder' : 'file'}`}>\n            <div className=\"file-icon\" onClick={() => handleFileClick(file)}>\n              {file.isDirectory ? 'üìÅ' : renderFileIcon(file)}\n            </div>\n            <div className=\"file-name\">{file.name}</div>\n            <div className=\"file-menu-icon\" onClick={() => toggleMenu(file)}>\n              &#8942;\n            </div>\n            {file.showMenu && (\n              <div className=\"file-menu\">\n                <button onClick={() => handleDownload(file)}>Download</button>\n                <button onClick={() => {\n                  const newName = prompt('Enter new name:');\n                  if (newName) handleRename(file, newName);\n                }}>Rename</button>\n                <button onClick={() => handleDelete(file)}>Delete</button>\n                <button onClick={() => {\n                  const newPath = prompt('Enter new path:');\n                  if (newPath) handleMove(file, newPath);\n                }}>Move</button>\n              </div>\n            )}\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default FileExplorer;\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 354, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}